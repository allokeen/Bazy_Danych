//===========Utworzenie bazy danych

CREATE DATABASE s298280_cwiczenia2			
\c s298280_cwiczenia2

Zad.2
CREATE SCHEMA sklep;					

Zad.5

psql -U postgres s298264cw2 < <ŚCIEŻKA DO PLIKU SQL>/sklep_s298280.sql
SET search_path TO sklep;

Zad.6

INSERT INTO producenci(id_producenta, nazwa_producenta, mail, telefon)
VALUES
(1, 'Holika Holika', 'holika@holika.com', '111111111'),
(2, 'TonyMoly', 'tony@moly', '222222222'),
(3, 'SkinFood', 'skin@food', '333333333'),
(4, 'Labiotica', 'labiotica@labiotica', '444444444');
(5, 'Lab', 'lab@lab', '555555555');


INSERT INTO produkty(id_produktu, nazwa_produktu, cena, producenci_id_producenta)
VALUES
(1, 'cushion BB cream', 50.00, 1),
(2, 'cushion CC cream', 40.00, 1),
(3, 'tube BB cream', 50.00, 2),
(4, 'tube CC cream', 40.00, 2),
(5, 'Serum Vitamin C', 30.00, 3),
(6, 'Serum Vitamin D', 30.00, 3),
(7, 'Serum Vitamin E', 30.00, 4),
(8, 'Serum Vitamin E', 30.00, 4),
(9, 'Serum Vitamin K', 30.00, 5),
(10, 'Macadamia Oil', 50.00, 5);


INSERT INTO zamowienia(id_produktu, data, ilosc) VALUES
(1, '01-01-2020', 1),
(1, '02-02-2020', 2),
(2, '03-03-2020', 3),
(2, '04-04-2020', 4),
(3, '05-05-2020', 5),
(3, '06-06-2020', 1),
(4, '07-07-2020', 2),
(4, '08-08-2020', 3),
(6, '09-09-2020', 4),
(6, '10-10-2020', 5),
(7, '11-11-2020', 1),
(7, '12-12-2020', 2);


Zad. 11
SELECT CONCAT('Producent: ', nazwa_producenta, ', liczba zamowien: ', SUM(ilosc), ',
 wartosc zamowienia: ', SUM(ilosc*cena)) 
FROM zamowienia 
RIGHT JOIN produkty ON id_produktu = produkty_id_produktu 
RIGHT JOIN producenci ON id_producenta = producenci_id_producenta 
GROUP BY id_producenta;

SELECT CONCAT('Produkt: ', nazwa_produktu, ', liczba zamowien: ', COUNT(id_zamowienia)) 
FROM zamowienia 
RIGHT JOIN produkty ON id_produktu = produkty_id_produktu 
GROUP BY nazwa_produktu;

SELECT * FROM zamowienia NATURAL JOIN produkty;

SELECT * FROM zamowienia WHERE DATE_PART('month', data) = 1;

SELECT count(id_zamowienia), DATE_PART('dow', data) as dzien_tygodnia 
FROM zamowienia 
GROUP BY dzien_tygodnia;

SELECT SUM(ilosc*cena) AS sprzedaz, DATE_PART('dow', data) AS dzien_tygodnia 
FROM zamowienia 
JOIN produkty ON id_produktu = produkty_id_produktu 
GROUP BY dzien_tygodnia 
ORDER BY sprzedaz DESC;

SELECT nazwa_produktu, COUNT(id_zamowienia) AS ilosc_zamowien 
FROM zamowienia 
RIGHT JOIN produkty ON id_produktu = produkty_id_produktu 
GROUP BY id_produktu 
ORDER BY ilosc_zamowien DESC;

Zad. 12
SELECT CONCAT('Produkt ', UPPER(nazwa_produktu), ', ktorego producentem jest ', LOWER(nazwa_producenta), ', zamowiono ', COUNT(id_zamowienia), ' razy.') AS opis 
FROM zamowienia 
RIGHT JOIN produkty ON id_produktu = produkty_id_produktu 
JOIN producenci ON id_producenta = producenci_id_producenta 
GROUP BY nazwa_produktu, nazwa_producenta 
ORDER BY COUNT(id_zamowienia) DESC;

SELECT zamowienia.*, produkty.*, SUM(cena*ilosc) 
FROM zamowienia 
JOIN produkty ON id_produktu = produkty_id_produktu 
GROUP BY id_zamowienia, id_produktu 
ORDER BY SUM(ilosc*cena) DESC LIMIT (SELECT COUNT(*) FROM zamowienia) - 3;

CREATE TABLE klienci(id_klienta SERIAL PRIMARY KEY, email VARCHAR(50) NOT NULL, telefon VARCHAR(15) NOT NULL);

ALTER TABLE zamowienia ADD COLUMN klienci_id_klienta INT REFERENCES klienci(id_klienta);

INSERT INTO klienci(id_klienta, email, telefon)
VALUES
(1, 'biedronka@warszawa.pl', '333000999'),
(2, 'dealerkrakow@volkswagen.pl', '456456456'),
(3, 'zabka@sklep.pl', '777111000'),
(4, 'sklep@mediamark.pl', '667990444'),
(5, 'kiosk@ruchu.pl', '987654320'),
(6, 'lewiatan@gmail.com', '154325870');

UPDATE zamowienia SET klienci_id_klienta = 1 WHERE id_zamowienia IN (1, 2, 3, 4, 5, 6, 7);
UPDATE zamowienia SET klienci_id_klienta = 2 WHERE id_zamowienia IN (8, 9);
UPDATE zamowienia SET klienci_id_klienta = 4 WHERE id_zamowienia IN (10, 11, 12, 13, 14, 15, 16);
UPDATE zamowienia SET klienci_id_klienta = 5 WHERE id_zamowienia IN (17, 18);
UPDATE zamowienia SET klienci_id_klienta = 6 WHERE id_zamowienia IN (19, 20);

SELECT klienci.*, nazwa_produktu, ilosc, ilosc*cena AS wartosc_zamowienia FROM zamowienia RIGHT JOIN klienci ON klienci_id_klienta = id_klienta JOIN produkty ON produkty_id_produktu = id_produktu;
SELECT CONCAT('NAJRZADZIEJ ZAMAWIAJACY: ', klienci.*, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(ilosc*cena)) FROM zamowienia RIGHT JOIN klienci ON klienci_id_klienta = id_klienta JOIN produkty ON produkty_id_produktu = id_produktu GROUP BY id_klienta ORDER BY COUNT(id_zamowienia) LIMIT 1;	--- bez uwzwględnienia tych klientów, co nie mają żadnego zamówienia
SELECT CONCAT('NAJCZESCIEJ ZAMAWIAJACY: ', klienci.*, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(ilosc*cena)) FROM zamowienia RIGHT JOIN klienci ON klienci_id_klienta = id_klienta JOIN produkty ON produkty_id_produktu = id_produktu GROUP BY id_klienta ORDER BY COUNT(id_zamowienia) DESC LIMIT 1;
DELETE FROM produkty WHERE id_produktu IN (SELECT id_produktu FROM zamowienia RIGHT JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY id_produktu HAVING COUNT(id_zamowienia) = 0);

Zad. 13
CREATE TABLE numer(liczba INT CHECK(liczba BETWEEN 0 AND 9999));
CREATE SEQUENCE liczba_seq START WITH 100 INCREMENT BY 5 MINVALUE 0 MAXVALUE 125 CYCLE;
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
ALTER SEQUENCE liczba_seq INCREMENT BY 6;
SELECT nextval('liczba_seq');
SELECT nextval('liczba_seq');
DROP SEQUENCE liczba_seq;


Zad. 14
\du
CREATE USER SU298280 SUPERUSER;
CREATE USER G298280;
GRANT CONNECT ON DATABASE s298280cw2 TO guest298280;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO guest298280;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO guest298280;
\du
ALTER USER Superuser298264 RENAME TO student;
ALTER USER student WITH NOSUPERUSER;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO student;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO student;


Zad. 15
BEGIN;
UPDATE produkty SET cena = cena + CAST(10 AS MONEY);
COMMIT;

BEGIN;
UPDATE produkty SET cena = 1.1*cena WHERE id_produktu = 3;
SAVEPOINT S1;
UPDATE zamowienia SET liczba_sztuk = 1.25*liczba_sztuk;
SAVEPOINT S2;

DELETE FROM klienci WHERE id_klienta IN (SELECT id_klienta FROM klienci 
JOIN zamowienia ON id_klienta = klienci_id_klienta 
JOIN produkty ON id_produktu = produkty_id_produktu 
GROUP BY id_klienta 
ORDER BY SUM(cena*ilosc) DESC LIMIT 1);

ROLLBACK TO S1;
ROLLBACK TO S2;
ROLLBACK;
COMMIT;

CREATE OR REPLACE FUNCTION udzial()
RETURNS TABLE (procent text) AS
$func$
BEGIN
	RETURN QUERY
	SELECT CONCAT(nazwa_producenta, ': ', (COUNT(id_zamowienia) / CAST((SELECT COUNT(*) FROM zamowienia) AS FLOAT))*100, '%') FROM producenci JOIN produkty ON id_producenta = producenci_id_producenta JOIN zamowienia ON id_produktu = produkty_id_produktu GROUP BY (id_producenta);
END
$func$ LANGUAGE plpgsql;

SELECT udzial();